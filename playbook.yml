---
- name: Add Host Keys
  hosts: all
  gather_facts: false
  become: false
  timeout: 100
  tags: always
  any_errors_fatal: true
  no_log: "{{ cs_no_log | default('true') }}"
  serial: 1
  tasks:
      - name: Add Host Keys | Add keys to known_hosts file /tmp/vault_vm_server_ssh_known_hosts
        become: false
        ansible.builtin.known_hosts:
            name: "{{ ansible_host }}"
            key: "{{ ansible_host }} {{ item }}"
            path: "{{ vault_vm_server_ssh_user_known_hosts_file }}"
            state: present
        delegate_to: localhost
        loop: "{{ host_keys }}"
        throttle: 1
        when: ansible_host != 'localhost'

- name: Patch System
  hosts: patchservers
  become: true
  become_user: root
  gather_facts: true
  no_log: "{{ cs_no_log }}"
  tags: never,patch
  tasks:
      - name: Patch System
        ansible.builtin.import_tasks:
            file: tasks/patch.yml

- name: Vaultops | Prepare
  hosts: localhost
  gather_facts: false
  become: false
  no_log: "{{ cs_no_log | default('true') }}"
  tags: vault,vault_system_install,vault_dr,never
  tasks:
      - name: Vaultops | Prepare | Download Vault binary
        ansible.builtin.get_url:
            dest: "{{ vaultops_tmp_dir_path }}/vault_{{ vault_rv_version }}_linux_{{ item.key }}.zip"
            mode: "0o644"
            checksum: sha256:{{ item.value['sha256sum'][vault_rv_version] }}
            url: "https://releases.hashicorp.com/vault/{{ vault_rv_version }}/\
                vault_{{ vault_rv_version }}_linux_{{ item.value['vault_arch'] }}.zip"
        loop: "{{ pv_vault_info_map | dict2items }}"

- name: Vaultops | Vault
  hosts: vault_vm_servers
  gather_facts: false
  become: false
  timeout: 100
  any_errors_fatal: true
  no_log: "{{ cs_no_log | default('true') }}"
  tasks:
      - name: Vaultops | Vault | Install | System
        become: true
        tags: vault,vault_system_install,vault_dr,never
        ansible.builtin.import_tasks:
            file: tasks/vaultops/install.yml

- name: Vaultops | Vault Virtual Node Server
  hosts: vault_nodes_servers
  gather_facts: false
  become: false
  timeout: 100
  any_errors_fatal: true
  no_log: "{{ cs_no_log | default('true') }}"
  tasks:
      - name: Vaultops | Vault Virtual Node Server | Install
        become: true
        tags: vault,vault_node_install,vault_dr,never
        ansible.builtin.import_tasks:
            file: tasks/vaultops/install_node.yml

      - name: Vaultops | Vault Virtual Node Server | DR
        become: true
        tags: vault_dr,never
        ansible.builtin.import_tasks:
            file: tasks/vaultops/dr.yml

- name: Vaultops | Downstream
  hosts: localhost
  gather_facts: false
  become: false
  timeout: 100
  any_errors_fatal: true
  no_log: "{{ cs_no_log | default('true') }}"
  tasks:
      - name: Vaultops | Downstream | github.com
        become: true
        tags: downstream,never,downstream_github
        ansible.builtin.import_tasks:
            file: tasks/vaultops/github.yml

- name: Mini0 KES
  hosts: mini0_kes
  become: false
  gather_facts: false
  no_log: "{{ cs_no_log }}"
  tasks:
      - name: Mini0 | KES
        tags: never,mini0,mini0_kes
        become: true
        become_user: root
        ansible.builtin.import_tasks:
            file: tasks/mini0-kes.yml

- name: Mini0
  hosts: mini0_mini0
  become: false
  gather_facts: false
  no_log: "{{ cs_no_log }}"
  tasks:
      - name: Mini0 | Disk
        tags: never,mini0,mini0_disk
        become: true
        become_user: root
        ansible.builtin.import_tasks:
            file: tasks/mini0/disk.yml

      - name: Mini0 | Mini0
        tags: never,mini0,mini0_mini0
        become: true
        become_user: root
        ansible.builtin.import_tasks:
            file: tasks/mini0/mini0.yml

- name: NFS Server
  hosts: rb4-m3
  become: false
  gather_facts: false
  no_log: "{{ cs_no_log }}"
  tasks:
      - name: NFS Server | Mount Disk
        become: true
        become_user: root
        tags: never,nfs-server
        ansible.builtin.import_tasks:
            file: tasks/nfs-server.yml

- name: NFS Client
  hosts: rb4-m1:rb4-m2
  become: false
  gather_facts: false
  no_log: "{{ cs_no_log }}"
  tasks:
      - name: NFS Client | Install NFS client
        become: true
        become_user: root
        tags: never,nfs-client
        ansible.builtin.import_tasks:
            file: tasks/nfs-client.yml

- name: Database
  hosts: rb4-m1
  become: false
  gather_facts: false
  no_log: "{{ cs_no_log }}"
  tasks:
      - name: Database | Postgres
        become: true
        become_user: root
        tags: never,database,postgres
        ansible.builtin.import_tasks:
            file: tasks/database/postgres.yml

      - name: Database | Redis
        become: true
        become_user: root
        tags: never,database,redis
        ansible.builtin.import_tasks:
            file: tasks/database/redis.yml

      - name: Database | Elasticsearch
        become: true
        become_user: root
        tags: never,database,elasticsearch
        ansible.builtin.import_tasks:
            file: tasks/database/elasticsearch.yml

- name: Collabora
  hosts: rb4-m2
  become: false
  gather_facts: false
  no_log: "{{ cs_no_log }}"
  tasks:
      - name: Collabora
        tags: never,collabora
        become: true
        become_user: root
        ansible.builtin.import_tasks:
            file: tasks/collabora.yml

- name: Nextcloud
  hosts: rb4-m3
  become: false
  gather_facts: false
  no_log: "{{ cs_no_log }}"
  tasks:
      - name: Nextcloud | Test cs_nc_protocol
        tags: never,nextcloud
        ansible.builtin.assert:
            that:
                - "cs_nc_protocol in ['http', 'https']"
            fail_msg: "cs_nc_protocol must be either 'http' or 'https'"
            success_msg: "cs_nc_protocol is valid"

      - name: Nextcloud | Prepare
        tags: never,nextcloud,nextcloud_prepare
        become: true
        become_user: root
        ansible.builtin.import_tasks:
            file: tasks/nextcloud/prepare.yml

      - name: Nextcloud | Install
        become: true
        become_user: root
        tags: never,nextcloud,nextcloud_install
        ansible.builtin.import_tasks:
            file: tasks/nextcloud/install.yml

      - name: Nextcloud | Admin
        become: true
        become_user: root
        tags: never,nextcloud,nextcloud_admin
        ansible.builtin.import_tasks:
            file: tasks/nextcloud/admin.yml

      - name: Nextcloud | Cache
        become: true
        become_user: root
        tags: never,nextcloud,nextcloud_cache
        ansible.builtin.import_tasks:
            file: tasks/nextcloud/cache.yml

      - name: Nextcloud | Mount Disk
        become: true
        become_user: root
        tags: never,nextcloud,nextcloud_mount
        ansible.builtin.import_tasks:
            file: tasks/nextcloud/mount.yml

      - name: Nextcloud | Imaginary
        become: true
        become_user: root
        tags: never,nextcloud,nextcloud_imaginary
        ansible.builtin.import_tasks:
            file: tasks/nextcloud/imaginary.yml

      - name: Nextcloud | Full Text Search
        become: true
        become_user: root
        tags: never,nextcloud,nextcloud_fulltextsearch
        ansible.builtin.import_tasks:
            file: tasks/nextcloud/fulltextsearch.yml

      - name: Nextcloud | Hub Bundle
        become: true
        become_user: root
        tags: never,nextcloud,nextcloud_hub_bundle
        ansible.builtin.import_tasks:
            file: tasks/nextcloud/hub_bundle.yml

      - name: Nextcloud | Users
        become: true
        become_user: root
        tags: never,nextcloud,nextcloud_users
        ansible.builtin.import_tasks:
            file: tasks/nextcloud/users/main.yml

      - name: Nextcloud | Post Install
        become: true
        become_user: root
        tags: never,nextcloud,nextcloud_post_install
        ansible.builtin.import_tasks:
            file: tasks/nextcloud/post-install.yml

      - name: Nextcloud | Dump
        become: true
        become_user: root
        tags: never,nextcloud,nextcloud_dump
        ansible.builtin.import_tasks:
            file: tasks/nextcloud/dump.yml

- name: Delete all
  hosts: patchservers
  become: false
  gather_facts: false
  no_log: "{{ cs_no_log }}"
  tags: never,delete_all
  tasks:
      - name: Delete all
        become: true
        become_user: root
        ansible.builtin.shell:
            cmd: |+
                echo "Removing docker containers {{ cs_postgres_container_name }} \
                    {{ ps_postgres_pg_admin_docker_container_name }} \
                    {{ redis_container_name }} {{ cs_elasticsearch_docker_container_name }} \
                    {{ cs_nc_imaginary_docker_container_name }} {{ cs_collabora_container_name }}"

                docker rm -f {{ cs_postgres_container_name }} \
                    {{ ps_postgres_pg_admin_docker_container_name }} \
                    {{ redis_container_name }} {{ cs_elasticsearch_docker_container_name }} \
                    {{ cs_nc_imaginary_docker_container_name }} {{ cs_collabora_container_name }}

                echo "Docker system prune -af --volumes"
                docker system prune -af --volumes

                echo "Apt autopurge"
                apt-get clean
                apt-get autopurge -y

                echo "Disable systemd services and timers {{ cs_nc_cron_system_timer_name }} \
                    {{ cs_nc_fts_elasticsearch_systemd }} {{ cs_nc_files_scanner_systemd_timer_name }} \
                    nextcloud-data-dump"
                systemctl disable --now {{ cs_nc_cron_system_timer_name }}.timer || true
                systemctl disable --now {{ cs_nc_cron_system_timer_name }}.service || true
                systemctl disable --now {{ cs_nc_fts_elasticsearch_systemd }}.service || true
                systemctl disable --now {{ cs_nc_files_scanner_systemd_timer_name }}.timer || true
                systemctl disable --now {{ cs_nc_files_scanner_systemd_timer_name }}.service || true
                systemctl disable --now nextcloud-data-dump.timer || true
                systemctl disable --now nextcloud-data-dump.service || true

                echo "Remove systemd services and timers files from /etc/systemd/system/nextcloud*"
                rm -rf /etc/systemd/system/nextcloud*

                echo "Remove directories {{ cs_nc_root_dir }} {{ cs_postgres_dir }} \
                    {{ cs_redis_dir }} {{ cs_elasticsearch_dir }} {{ cs_collabora_dir }}"
                rm -rf {{ cs_nc_root_dir }} {{ cs_postgres_dir }} {{ cs_redis_dir }} {{ cs_elasticsearch_dir }} \
                    {{ cs_collabora_dir }}

            executable: /bin/bash
        changed_when: true
        register: delete_all

      - name: Delete all | Debug
        ansible.builtin.debug:
            msg: "{{ delete_all.stdout_lines | default([]) + delete_all.stderr_lines | default([]) }}"
