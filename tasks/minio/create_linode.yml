---
- name: Mini0 | Linode | add id_ed25519 to user account
  linode.cloud.ssh_key:
      label: "{{ sdic_linode_id_ed25519_key_label }}"
      state: present
      ssh_key: "{{ sdic_linode_id_ed25519_pub }}"
      api_token: "{{ linode_api_token }}"

- name: Mini0 | Linode | Create Volume
  linode.cloud.volume:
      label: "{{ minio_sdic_linode_volume_label }}"
      region: "{{ sdic_linode_region }}"
      size: 11
      api_token: "{{ linode_api_token }}"
      state: present
  register: sdic_minio_volume_create

- name: Mini0 | Linode | Create Mini0 Instance
  linode.cloud.instance:
      api_token: "{{ linode_api_token }}"
      label: "{{ minio_sdic_linode_instance_label }}"
      region: "{{ sdic_linode_region }}"
      type: g6-nanode-1
      booted: true
      boot_config_label: sdic-minio-boot-config
      state: present
      rebooted: false
      private_ip: false
      wait: true
      wait_timeout: 1500
      tags:
          - sdic
          - minio
          - sdic-minio
          - env=production
      disks:
          - label: boot
            size: 25088
            image: linode/debian12
            authorized_keys:
                - "{{ sdic_linode_id_ed25519_pub }}"
          - label: swap
            filesystem: swap
            size: 512
      configs:
          - label: sdic-minio-boot-config
            root_device: /dev/sda
            kernel: "linode/grub2"
            devices:
                sda:
                    disk_label: boot
                sdb:
                    disk_label: swap
                sdc:
                    volume_id: "{{ sdic_minio_volume_create.volume.id }}"
  register: sdic_minio_instance_create

- name: Mini0 | Linode | Add sdic subdomain to Linode Cloud DNS
  # This must be after the instance is created,
  # as it's mandatory in linode to use linode Domain we must have a linode instance
  linode.cloud.domain:
      domain: "{{ sdic_linode_manage_domain }}"
      type: master
      state: present
      api_token: "{{ linode_api_token }}"
      status: active
      soa_email: "{{ linode_email_id }}"
      refresh_sec: 300
      retry_sec: 300
      ttl_sec: 300

- name: Mini0 | Linode | Set Public IPv4 and IPv6
  ansible.builtin.set_fact:
      sdic_minio_instance_public_ipv4: "{{ sdic_minio_instance_create.networking.ipv4.public[0].address }}"

- name: Mini0 | Linode | Set A Record for Mini0
  linode.cloud.domain_record:
      domain: "{{ sdic_linode_manage_domain }}"
      name: "{{ minio_server_sub_domain_name }}"
      type: "A"
      target: "{{ sdic_minio_instance_public_ipv4 }}"
      state: present
      ttl_sec: 30
      api_token: "{{ linode_api_token }}"

- name: Mini0 | Linode | Update reverse DNS
  when: false
  linode.cloud.ip_rdns:
      state: present
      address: "{{ sdic_minio_instance_public_ipv4 }}"
      rdns: "{{ minio_server_domain }}"
      api_token: "{{ linode_api_token }}"

# - name: Mini0 | Linode | Make Godaddy NS Record for Linode Domain
#   ansible.builtin.uri:
#       url: "https://api.godaddy.com/v1/domains/{{ sdic_godaddy_master_domain }}/records/NS/\
#           {{ sdic_linode_manage_sub_domain_name }}"
#       method: PUT
#       headers:
#           Authorization: "sso-key {{ sdic_godaddy_api_key }}:{{ sdic_godaddy_api_secret }}"
#       body_format: json
#       body:
#           - { "data": "ns1.linode.com", "name": "sdic", "ttl": 600, "type": "NS" }
#           - { "data": "ns2.linode.com", "name": "sdic", "ttl": 600, "type": "NS" }
#           - { "data": "ns3.linode.com", "name": "sdic", "ttl": 600, "type": "NS" }
#           - { "data": "ns4.linode.com", "name": "sdic", "ttl": 600, "type": "NS" }
#           - { "data": "ns5.linode.com", "name": "sdic", "ttl": 600, "type": "NS" }
