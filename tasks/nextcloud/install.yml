---
- name: Nextcloud | Install | Check if Nextcloud config.php exists
  ansible.builtin.stat:
      path: "{{ cs_nc_web_dir }}/config/config.php"
  register: is_nc_www_config_php_present

- name: Nextcloud | Install | Download New
  when: not is_nc_www_config_php_present.stat.exists
  block:
      - name: Nextcloud | Install | Download New | Download Nextcloud {{ cs_nc_version }}
        ansible.builtin.get_url:
            url: "https://download.nextcloud.com/server/releases/nextcloud-{{ cs_nc_version }}.zip"
            dest: "/tmp/nextcloud-{{ cs_nc_version }}.zip"
            mode: "0644"

      - name: Nextcloud | Install | Download New | Create unzip directory and web directory
        ansible.builtin.file:
            path: /tmp/nextcloud-{{ cs_nc_version }}
            state: directory
            mode: "0755"
        with_items:
            - /tmp/nextcloud-{{ cs_nc_version }}
            - "{{ cs_nc_web_dir }}"

      - name: Nextcloud | Install | Download New | Unzip Nextcloud
        ansible.builtin.unarchive:
            src: "/tmp/nextcloud-{{ cs_nc_version }}.zip"
            dest: "/tmp/nextcloud-{{ cs_nc_version }}"
            remote_src: true
            creates: "/tmp/nextcloud-{{ cs_nc_version }}/index.php"
            mode: "0644"

      - name: Nextcloud | Install | Download New | Copy Nextcloud to {{ cs_nc_web_dir }}
        ansible.builtin.copy:
            src: "/tmp/nextcloud-{{ cs_nc_version }}/nextcloud/"
            dest: "{{ cs_nc_web_dir }}/"
            remote_src: true
            owner: "{{ cs_nc_run_user }}"
            group: "{{ cs_nc_run_group }}"
            mode: "0755"

      - name: Nextcloud | Install | Download New | Remove AD
        ansible.builtin.command:
            cmd: truncate -s 0 {{ cs_nc_web_dir }}/apps/settings/templates/settings/personal/development.notice.php
        changed_when: true

- name: Nextcloud | Install | Create Nextcloud directory
  ansible.builtin.file:
      path: "{{ item }}"
      state: directory
      mode: "0755"
      owner: "{{ cs_nc_run_user }}"
      group: "{{ cs_nc_run_group }}"
  with_items:
      - "{{ cs_nc_data_dir }}"
      - "{{ cs_nc_cert_dir }}"

- name: Nextcloud | Install | Copy icons
  ansible.builtin.copy:
      src: "{{ item.src }}"
      dest: "{{ item.dest }}"
      mode: "0644"
  with_items:
      - src: files/nc/favicon.svg
        dest: /tmp/nc-favicon.ico
      - src: files/nc/logo.png
        dest: /tmp/nc-logo.png
      - src: files/nc/logoheader.png
        dest: /tmp/nc-logoheader.png
      - src: files/nc/background.jpg
        dest: /tmp/nc-background.jpg

- name: Nextcloud | Install | Databse Client Certificate | Create SSL Private key
  community.crypto.openssl_privatekey:
      path: "{{ cs_nc_db_privkey_pem_file }}"
      size: 4096
      mode: "0600"
      owner: "{{ cs_nc_run_user }}"
      group: "{{ cs_nc_run_group }}"

- name: Nextcloud | Install | Databse Client Certificate | Create SSL CSR
  community.crypto.openssl_csr:
      path: "/tmp/nc_db_client.csr"
      privatekey_path: "{{ cs_nc_db_privkey_pem_file }}"
      common_name: "{{ cs_nc_db_user }}"
      key_usage:
          - "digitalSignature"
          - "keyEncipherment"
          - "keyAgreement"
      extended_key_usage:
          - "clientAuth"
      create_subject_key_identifier: true
      mode: "0644"
      owner: "{{ cs_nc_run_user }}"
      group: "{{ cs_nc_run_group }}"

- name: Nextcloud | Install | Databse Client Certificate | Sign SSL CSR
  community.crypto.x509_certificate:
      path: "{{ cs_nc_db_cert_pem_file }}"
      csr_path: "/tmp/nc_db_client.csr"
      provider: ownca
      ownca_privatekey_content: "{{ lookup('ansible.builtin.file', cs_root_ca_privkey_pem_file,
          lstrip=false, rstrip=false) }}"
      ownca_privatekey_passphrase: "{{ lookup('ansible.builtin.file', cs_root_ca_privkey_pass_file,
          lstrip=false, rstrip=false) }}"
      ownca_content: "{{ lookup('ansible.builtin.file', cs_root_ca_cert_pem_file,
          lstrip=false, rstrip=false) }}"
      mode: "0644"
      owner: "{{ cs_nc_run_user }}"
      group: "{{ cs_nc_run_group }}"
      return_content: true

- name: Nextcloud | Install | Databse Client Certificate | Write CA certificate
  ansible.builtin.copy:
      content: "{{ lookup('ansible.builtin.file', cs_root_ca_cert_pem_file, lstrip=false, rstrip=false) }}"
      dest: "{{ cs_nc_db_chain_pem_file }}"
      mode: "0644"
      owner: "{{ cs_nc_run_user }}"
      group: "{{ cs_nc_run_group }}"

- name: Nextcloud | Install | Write ownca CA certificate
  ansible.builtin.copy:
      src: "{{ cs_root_ca_cert_pem_file }}"
      dest: "{{ cs_nc_root_ca_chain_pem_file }}"
      mode: "0644"
      owner: "{{ cs_nc_run_user }}"
      group: "{{ cs_nc_run_group }}"
      remote_src: false

- name: Nextcloud | Install | Reset permissions and ownership
  ansible.builtin.shell:
      cmd: |+
          set -euo pipefail;

          find {{ cs_nc_data_dir }}/ -type d -exec chmod 0750 {} \;
          find {{ cs_nc_data_dir }}/ -type f -exec chmod 640 {} \;
          chown -R {{ cs_nc_run_user }}:{{ cs_nc_run_group }} {{ cs_nc_data_dir }};

          find {{ cs_nc_web_dir }}/ -type d -exec chmod 0750 {} \;
          find {{ cs_nc_web_dir }}/ -type f -exec chmod 640 {} \;
          chown -R {{ cs_nc_run_user }}:{{ cs_nc_run_group }} {{ cs_nc_web_dir }};
      executable: /bin/bash
  changed_when: true

- name: Nextcloud | Install | Check if Nextcloud is installed
  ansible.builtin.stat:
      path: "{{ cs_nc_web_dir }}/config/CAN_INSTALL"
  register: is_nc_occ_installed

- name: Nextcloud | Install | Install Nextcloud for the first time
  when: is_nc_occ_installed.stat.exists
  become: true
  become_user: "{{ cs_nc_run_user }}"
  ansible.builtin.command:
      cmd: "php occ maintenance:install --database '{{ cs_nc_db_type }}' --database-name '{{ cs_nc_db_database }}'
          --database-user '{{ cs_nc_db_user }}' --database-pass '{{ cs_nc_db_password }}'
          --database-host '{{ cs_nc_db_host }};port={{ cs_nc_db_port }};\
          sslmode=verify-full;sslrootcert={{ cs_nc_db_chain_pem_file }};sslcert={{ cs_nc_db_cert_pem_file }};\
          sslkey={{ cs_nc_db_privkey_pem_file }}'
          --admin-user '{{ cs_nc_admin_user }}' --admin-pass '{{ cs_nc_admin_password }}'
          --data-dir '{{ cs_nc_data_dir }}' --no-interaction"
      chdir: "{{ cs_nc_web_dir }}"
  register: nc_install_output
  changed_when: true

- name: Nextcloud | Install | Enable Featured Apps encryption admin_audit bruteforcesettings files_external
      suspicious_login twofactor_totp user_ldap
  become: true
  become_user: "{{ cs_nc_run_user }}"
  ansible.builtin.command:
      cmd: "php occ app:enable encryption admin_audit bruteforcesettings files_external suspicious_login
          twofactor_totp user_ldap"
      chdir: "{{ cs_nc_web_dir }}"
  changed_when: true

- name: Nextcloud | Install | Enable encryption
  become: true
  become_user: "{{ cs_nc_run_user }}"
  ansible.builtin.command:
      cmd: "php occ {{ item }}"
      chdir: "{{ cs_nc_web_dir }}"
  changed_when: true
  with_items:
      - "encryption:enable"
      - "encryption:enable-master-key"

- name: Nextcloud | Install | Disable web update
  become: true
  become_user: "{{ cs_nc_run_user }}"
  ansible.builtin.command:
      cmd: "php occ config:system:set upgrade.disable-web --value true --type boolean"
      chdir: "{{ cs_nc_web_dir }}"
  changed_when: true

- name: Nextcloud | Install | Set release channel to stable
  become: true
  become_user: "{{ cs_nc_run_user }}"
  ansible.builtin.command:
      cmd: "php occ config:system:set updater.release.channel --value stable"
      chdir: "{{ cs_nc_web_dir }}"
  changed_when: false

- name: Nextcloud | Install | Get Status
  become: true
  become_user: "{{ cs_nc_run_user }}"
  ansible.builtin.command:
      cmd: "php occ status --output=json"
      chdir: "{{ cs_nc_web_dir }}"
  changed_when: false
  register: nc_status_installed

- name: Nextcloud | Install | Test if Nextcloud is installed correctly
  ansible.builtin.assert:
      that:
          - nc_current_status.installed
          - nc_current_status.versionstring == cs_nc_version
          - not nc_current_status.needsDbUpgrade
      fail_msg: "Nextcloud is not installed correctly"
      success_msg: "Nextcloud is installed"
  vars:
      nc_current_status: "{{ nc_status_installed.stdout | from_json }}"

- name: Nextcloud | Install | Import Ownca CA certificate
  become: true
  become_user: "{{ cs_nc_run_user }}"
  ansible.builtin.command:
      cmd: "php occ security:certificates:import {{ cs_nc_root_ca_chain_pem_file }}"
      chdir: "{{ cs_nc_web_dir }}"
  changed_when: true

- name: Nextcloud | Install | Gather facts
  ansible.builtin.setup:

- name: Nextcloud | Install | Set Trusted Domains
  become: true
  become_user: "{{ cs_nc_run_user }}"
  ansible.builtin.command:
      cmd: "php occ {{ item }}"
      chdir: "{{ cs_nc_web_dir }}"
  changed_when: true
  with_items:
      - "config:system:set trusted_domains 0 --value={{ cs_nc_domain }}"
      - "config:system:set trusted_domains 1 --value={{ ansible_fqdn }}"
      - "config:system:set trusted_domains 2 --value=localhost"
      - "config:system:set trusted_domains 3 --value=127.0.0.1"

- name: Nextcloud | Install | Add missing indices
  become: true
  become_user: "{{ cs_nc_run_user }}"
  ansible.builtin.command:
      cmd: "php occ db:add-missing-indices"
      chdir: "{{ cs_nc_web_dir }}"
  changed_when: true

- name: Nextcloud | Install | Set log config
  become: true
  become_user: "{{ cs_nc_run_user }}"
  ansible.builtin.command:
      cmd: "php occ {{ item }}"
      chdir: "{{ cs_nc_web_dir }}"
  changed_when: true
  with_items:
      - "config:system:set log_type --value file"
      - "config:system:set logfile --value '{{ cs_nc_log_file }}'"
      - "config:system:set logfile_audit --value '{{ cs_nc_log_file }}'"
      - "config:system:set log.condition apps 0 --value=admin_audit"
      - "config:system:set log_rotate_size --value 10485760"
      - "config:app:set admin_audit logfile --value={{ cs_nc_log_file }}"
      - "config:system:set loglevel --value 2"
      - "config:system:set logdateformat --value 'Y-m-d H:i:s'"

- name: Nextcloud | Install | Set locals
  become: true
  become_user: "{{ cs_nc_run_user }}"
  ansible.builtin.command:
      cmd: "php occ {{ item }}"
      chdir: "{{ cs_nc_web_dir }}"
  changed_when: true
  with_items:
      - "config:system:set logtimezone --value '{{ cs_nc_logtimezone }}'"
      - "config:system:set default_phone_region --value '{{ cs_nc_default_phone_region }}'"
      - "config:system:set default_language --value en"
      - "config:system:set default_locale --value en_IN"

- name: Nextcloud | Install | Set email config
  become: true
  become_user: "{{ cs_nc_run_user }}"
  ansible.builtin.command:
      cmd: "php occ {{ item }}"
      chdir: "{{ cs_nc_web_dir }}"
  changed_when: true
  with_items:
      - "config:system:set mail_smtpmode --value {{ cs_nc_mail_smtpmode }}"
      - "config:system:set mail_sendmailmode --value {{ cs_nc_mail_sendmailmode }}"
      - "config:system:set mail_smtpport --value {{ cs_nc_mail_smtpport }}"
      - "config:system:set mail_from_address --value {{ cs_nc_mail_from_address }}"
      - "config:system:set mail_domain --value {{ cs_nc_mail_domain }}"
      - "config:system:set mail_smtpsecure --value {{ cs_nc_mail_smtpsecure }}"
      - "config:system:set mail_smtpauth --value {{ cs_nc_mail_smtpauth }}"
      - "config:system:set mail_smtphost --value {{ cs_nc_mail_smtphost }}"
      - "config:system:set mail_smtpname --value {{ cs_nc_mail_smtpname }}"
      - "config:system:set mail_smtppassword --value {{ cs_nc_mail_smtppassword }}"

- name: Nextcloud | Install | Set nextcloud maintenance window at 3 am
  become: true
  become_user: "{{ cs_nc_run_user }}"
  ansible.builtin.command:
      cmd: "php occ config:system:set maintenance_window_start --type=integer --value=3"
      chdir: "{{ cs_nc_web_dir }}"
  changed_when: true

- name: Nextcloud | Install | Set nextcloud url
  become: true
  become_user: "{{ cs_nc_run_user }}"
  ansible.builtin.command:
      cmd: "php occ {{ item }}"
      chdir: "{{ cs_nc_web_dir }}"
  changed_when: true
  with_items:
      - "config:system:set overwrite.cli.url --value {{ cs_nc_protocol }}://{{ cs_nc_domain }}:{{ cs_nc_port }}"
      - "config:system:set overwritehost --value {{ cs_nc_domain }}:{{ cs_nc_port }}"
      - "config:system:set overwriteprotocol --value {{ cs_nc_protocol }}"
      - "config:system:set htaccess.RewriteBase --value /"

- name: Nextcloud | Install | Remove default skeleton and template directories
  become: true
  become_user: "{{ cs_nc_run_user }}"
  ansible.builtin.command:
      cmd: "php occ {{ item }}"
      chdir: "{{ cs_nc_web_dir }}"
  changed_when: true
  with_items:
      - "config:system:set skeletondirectory --value ''"
      - "config:system:set templatedirectory --value ''"

- name: Nextcloud | Install | Set theming
  become: true
  become_user: "{{ cs_nc_run_user }}"
  ansible.builtin.command:
      cmd: "php occ {{ item }}"
      chdir: "{{ cs_nc_web_dir }}"
  changed_when: true
  with_items:
      - "theming:config name 'Home Server'"
      - "theming:config slogan 'Where bytes go to retire and data parties in pajamas!'"
      - "theming:config url '{{ cs_nc_protocol }}://{{ cs_nc_domain }}:{{ cs_nc_port }}'"
      - "theming:config color '#2C2222'"
      - "theming:config favicon '/tmp/nc-favicon.ico'"
      - "theming:config logo '/tmp/nc-logo.png'"
      - "theming:config logoheader '/tmp/nc-logoheader.png'"
      - "theming:config background '/tmp/nc-background.jpg'"
      - "theming:config disable-user-theming yes"

- name: Nextcloud | Install | Set theming for client apps
  become: true
  become_user: "{{ cs_nc_run_user }}"
  ansible.builtin.command:
      cmd: "php occ {{ item }}"
      chdir: "{{ cs_nc_web_dir }}"
  changed_when: true
  with_items:
      - "config:app:set theming AndroidClientUrl
        --value 'https://play.google.com/store/apps/details?id=com.nextcloud.client'"
      - "config:app:set theming iOSClientUrl --value 'https://itunes.apple.com/us/app/nextcloud/id1125420102?mt=8'"
      - "config:app:set theming iTunesAppId --value '1125420102'"

- name: Nextcloud | Install | Maintenance Update htaccess
  become: true
  become_user: "{{ cs_nc_run_user }}"
  ansible.builtin.command:
      cmd: "php occ maintenance:update:htaccess"
      chdir: "{{ cs_nc_web_dir }}"
  changed_when: true

- name: Nextcloud | Install | Create systemd unit file for nextcloud cron
  ansible.builtin.template:
      dest: "/etc/systemd/system/nextcloud-cron.service"
      src: "templates/nc/nextcloud-cron.service.j2"
      mode: "0644"

- name: Nextcloud | Install | Create systemd timmer file for nextcloud cron
  ansible.builtin.copy:
      dest: "/etc/systemd/system/nextcloud-cron.timer"
      src: files/nc/nextcloud-cron.timer
      mode: "0644"
      remote_src: false

- name: Nextcloud | Install | Enable systemd timmer for nextcloud cron
  ansible.builtin.systemd_service:
      name: nextcloud-cron.timer
      enabled: true
      state: restarted
      daemon_reload: true
