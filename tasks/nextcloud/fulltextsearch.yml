---
- name: Nextcloud | Full Text Search | Stop old dependency containers
  community.docker.docker_container:
      name: "nextcloud-elasticsearch"
      state: absent
      force_kill: true

- name: Nextcloud | Full Text Search | Create Elasticsearch Data Directory
  ansible.builtin.file:
      path: "{{ cs_nc_elasticsearch_data_dir }}"
      state: directory
      mode: "0777"
      owner: root
      group: root
      recurse: true

- name: Nextcloud | Full Text Search | Create Elasticsearch Container
  community.docker.docker_container:
      name: nextcloud-elasticsearch
      image: "docker.io/nextcloud/aio-fulltextsearch:latest"
      user: "1000:1000"
      volumes:
          - "{{ cs_nc_elasticsearch_data_dir }}:/usr/share/elasticsearch/data:rw"
      ports:
          - "9200:9200"
          - "9300:9300"
      state: started
      restart_policy: always
      env:
          TZ: Asia/Kolkata
          "discovery.type": "single-node"
          ES_JAVA_OPTS: "-Xms512m -Xmx512m"
          "node.name": "es01"
          "cluster.name": docker-cluster
          "bootstrap.memory_lock": "true"
          "http.port": "9200"
          "xpack.license.self_generated.type": basic
          "xpack.security.enabled": "false"
          "logger.org.elasticsearch.discovery": WARN
          ELASTIC_CONTAINER: "true"
          FULLTEXTSEARCH_PASSWORD: "{{ cs_nc_elasticsearch_password }}"
      ulimits:
          - "memlock:-1:-1"

- name: Nextcloud | Full Text Search | Install apps
  become: true
  become_user: www-data
  ansible.builtin.command:
      cmd: "php occ app:install {{ item }}"
      chdir: "{{ cs_nc_web_root_dir }}"
  changed_when: true
  with_items:
      - "fulltextsearch"
      - "files_fulltextsearch"
      - "fulltextsearch_elasticsearch"
  when: >
      not
      (
        item in cs_nc_app_list.stdout | from_json | json_query('enabled')
      or
        item in cs_nc_app_list.stdout | from_json | json_query('disabled')
      )

- name: Nextcloud | Full Text Search | create nextcloud-fulltext-elasticsearch-worker
  ansible.builtin.copy:
      dest: /etc/systemd/system/nextcloud-fulltext-elasticsearch-worker.service
      content: |+
          [Unit]
          Description=Elasticsearch Worker for Nextcloud Fulltext Search
          After=network.target

          [Service]
          User=www-data
          Group=www-data
          Type=simple
          WorkingDirectory={{ cs_nc_web_root_dir }}
          ExecStart=/usr/bin/php {{ cs_nc_web_root_dir }}/occ fulltextsearch:live -q
          ExecStop=/usr/bin/php {{ cs_nc_web_root_dir }}/occ fulltextsearch:stop
          Nice=19
          Restart=always

          [Install]
          WantedBy=multi-user.target
      mode: "0644"

- name: Nextcloud | Full Text Search | Enable nextcloud-fulltext-elasticsearch-worker
  ansible.builtin.systemd_service:
      name: nextcloud-fulltext-elasticsearch-worker.service
      enabled: true
      state: restarted
      daemon_reload: true

- name: Nextcloud | Full Text Search | Set Apps Config
  ansible.builtin.set_fact:
      cs_nc_app_config:
          apps:
              fulltextsearch:
                  "app_navigation": "1"
                  enabled: "yes"
                  search_platform: "OCA\\FullTextSearch_Elasticsearch\\Platform\\ElasticSearchPlatform"
                  "types": ""
              fulltextsearch_elasticsearch:
                  enabled: "yes"
                  elastic_host: "http://elastic:{{ cs_nc_elasticsearch_password }}@127.0.0.1:9200"
                  elastic_index: "nextcloud"
                  elastic_type: "file"
                  analyzer_tokenizer: "standard"
                  types: ""

- name: Nextcloud | Full Text Search | Write Apps Config
  ansible.builtin.copy:
      content: "{{ cs_nc_app_config | to_nice_json }}"
      dest: "/tmp/nc-apps-config.json"
      mode: "0644"

- name: Nextcloud | Full Text Search | Import Apps Config
  become: true
  become_user: www-data
  ansible.builtin.command:
      cmd: "php occ config:import /tmp/nc-apps-config.json"
      chdir: "{{ cs_nc_web_root_dir }}"
  changed_when: true
