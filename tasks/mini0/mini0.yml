---
- name: Mini0 | Mini0 | Create group
  ansible.builtin.group:
      name: "{{ cs_mini0_mini0_group_name }}"
      state: present
      system: true
  register: mini0_mini0_group_name_create

- name: Mini0 | Mini0 | Create User
  ansible.builtin.user:
      name: "{{ cs_mini0_mini0_user_name }}"
      group: "{{ cs_mini0_mini0_group_name }}"
      groups:
          - docker
      shell: /bin/false
      system: true
      state: present
  register: mini0_mini0_user_name_create

- name: Mini0 | Mini0 | Create Directory
  ansible.builtin.file:
      name: "{{ item }}"
      owner: "{{ cs_mini0_mini0_user_name }}"
      group: "{{ cs_mini0_mini0_group_name }}"
      mode: "0755"
      state: directory
  with_items:
      - "{{ cs_mini0_mini0_working_dir }}"
      - "{{ cs_mini0_mini0_data_dir }}"
      - "{{ cs_mini0_mini0_certs_dir }}"
      - "{{ cs_mini0_mini0_private_key | dirname }}"
      - "{{ cs_mini0_mini0_cert_file | dirname }}"
      - "{{ cs_mini0_mini0_chain_file | dirname }}"
      - "{{ cs_mini0_mini0_csr_file | dirname }}"
      - "{{ cs_mini0_mini0_kes_cert_dir }}"
      - "{{ cs_mini0_mini0_kes_admin_cert | dirname }}"
      - "{{ cs_mini0_mini0_kes_admin_key | dirname }}"
      - "{{ cs_mini0_mini0_kes_ca_cert | dirname }}"
      - "{{ cs_mini0_mini0_fullchain_file | dirname }}"

- name: Mini0 | Mini0 | Remove old Container
  community.docker.docker_container:
      name: "{{ cs_mini0_mini0_container_name }}"
      state: absent
      force_kill: true

- name: Mini0 | Mini0 | Copy Kes Certs
  become: true
  become_user: root
  ansible.builtin.copy:
      src: "{{ item.src }}"
      dest: "{{ item.dest }}"
      owner: "{{ cs_mini0_mini0_user_name }}"
      group: "{{ cs_mini0_mini0_group_name }}"
      mode: "0644"
      remote_src: true
  with_items:
      - { src: "{{ cs_mini0_kes_cert_file }}", dest: "{{ cs_mini0_mini0_kes_admin_cert }}" }
      - { src: "{{ cs_mini0_kes_cert_key_file }}", dest: "{{ cs_mini0_mini0_kes_admin_key }}" }
      - { src: "{{ cs_mini0_kes_cert_file }}", dest: "{{ cs_mini0_mini0_kes_ca_cert }}" }

- name: Mini0 | Mini0 | Create SSL Private key
  community.crypto.openssl_privatekey:
      path: "{{ cs_mini0_mini0_private_key }}"
      size: 4096
      mode: "0600"
      owner: "{{ cs_mini0_mini0_user_name }}"
      group: "{{ cs_mini0_mini0_group_name }}"

- name: Mini0 | Mini0 | Create SSL CSR
  community.crypto.openssl_csr:
      path: "{{ cs_mini0_mini0_csr_file }}"
      privatekey_path: "{{ cs_mini0_mini0_private_key }}"
      common_name: "{{ cs_mini0_mini0_domain }}"
      subject_alt_name:
          - "IP:{{ cs_mini0_mini0_public_ip }}"
          - "DNS:{{ cs_mini0_mini0_domain }}"
          - "DNS:*.{{ cs_mini0_mini0_domain }}"
          - "IP:{{ cs_mini0_mini0_private_ip }}"
      key_usage:
          - "digitalSignature"
          - "keyEncipherment"
          - "keyAgreement"
      extended_key_usage:
          - "serverAuth"
      create_subject_key_identifier: true
      mode: "0644"
      owner: "{{ cs_mini0_mini0_user_name }}"
      group: "{{ cs_mini0_mini0_group_name }}"

- name: Mini0 | Mini0 | Sign SSL CSR
  community.crypto.x509_certificate:
      path: "{{ cs_mini0_mini0_cert_file }}"
      csr_path: "{{ cs_mini0_mini0_csr_file }}"
      provider: ownca
      ownca_privatekey_content: "{{ lookup('ansible.builtin.file', cs_root_ca_privkey_pem_file,
          lstrip=false, rstrip=false) }}"
      ownca_privatekey_passphrase: "{{ lookup('ansible.builtin.file', cs_root_ca_privkey_pass_file,
          lstrip=false, rstrip=false) }}"
      ownca_content: "{{ lookup('ansible.builtin.file', cs_root_ca_cert_pem_file,
          lstrip=false, rstrip=false) }}"
      mode: "0644"
      owner: "{{ cs_mini0_mini0_user_name }}"
      group: "{{ cs_mini0_mini0_group_name }}"
      return_content: true
  register: mini0_mini0_cert_file_create

- name: Mini0 | Mini0 | Write Fullchain
  ansible.builtin.copy:
      content: |+
          {{ mini0_mini0_cert_file_create.certificate | trim }}
          {{ lookup('ansible.builtin.file', cs_root_ca_cert_pem_file, lstrip=false, rstrip=false) }}
      dest: "{{ cs_mini0_mini0_fullchain_file }}"
      mode: "0644"
      owner: "{{ cs_mini0_mini0_user_name }}"
      group: "{{ cs_mini0_mini0_group_name }}"
      remote_src: false

- name: Mini0 | Mini0 | Write CA Chain certificate
  ansible.builtin.copy:
      src: "{{ cs_root_ca_cert_pem_file }}"
      dest: "{{ cs_mini0_mini0_chain_file }}"
      mode: "0644"
      owner: "{{ cs_mini0_mini0_user_name }}"
      group: "{{ cs_mini0_mini0_group_name }}"
      remote_src: false

- name: Mini0 | Mini0 | Start Container
  become: true
  become_user: "{{ cs_mini0_mini0_user_name }}"
  community.docker.docker_container:
      name: "{{ cs_mini0_mini0_container_name }}"
      image: "{{ cs_mini0_mini0_image }}:{{ cs_mini0_mini0_version }}"
      restart_policy: unless-stopped
      hostname: "{{ cs_mini0_mini0_domain }}"
      user: "{{ mini0_mini0_user_name_create.uid }}:{{ mini0_mini0_group_name_create.gid }}"
      ports:
          - "{{ cs_mini0_mini0_port }}:{{ cs_mini0_mini0_port }}"
          - "{{ cs_mini0_mini0_console_port }}:{{ cs_mini0_mini0_console_port }}"
      volumes:
          - "{{ cs_mini0_mini0_data_dir }}:{{ cs_mini0_mini0_data_dir }}"
          - "{{ cs_mini0_mini0_kes_admin_key }}:{{ cs_mini0_mini0_kes_admin_key }}"
          - "{{ cs_mini0_mini0_kes_admin_cert }}:{{ cs_mini0_mini0_kes_admin_cert }}"
          - "{{ cs_mini0_mini0_kes_ca_cert }}:{{ cs_mini0_mini0_kes_ca_cert }}"
          - "{{ cs_mini0_mini0_private_key }}:/certs/private.key"
          - "{{ cs_mini0_mini0_fullchain_file }}:/certs/public.crt"
          - "{{ cs_mini0_mini0_chain_file }}:/certs/CAs/chain.crt"
      networks:
          - name: "{{ cs_mini0_docker_network_name }}"
      env:
          MINIO_DOMAIN: "{{ cs_mini0_mini0_domain }}"
          MINIO_KMS_KES_ENDPOINT: "{{ cs_mini0_mini0_kes_endpoint }}"
          MINIO_KMS_KES_KEY_FILE: "{{ cs_mini0_mini0_kes_admin_key }}"
          MINIO_KMS_KES_CERT_FILE: "{{ cs_mini0_mini0_kes_admin_cert }}"
          MINIO_KMS_KES_CAPATH: "{{ cs_mini0_mini0_kes_ca_cert }}"
          MINIO_KMS_KES_KEY_NAME: "{{ cs_mini0_mini0_default_kms_key_id }}"
          MINIO_ROOT_USER: "{{ cs_mini0_mini0_root_user }}"
          MINIO_ROOT_PASSWORD: "{{ cs_mini0_mini0_root_password }}"
          MINIO_REGION: "{{ cs_mini0_mini0_region }}"
      command:
          - server
          - "{{ cs_mini0_mini0_data_dir }}"
          - --address
          - "{{ cs_mini0_mini0_domain }}:{{ cs_mini0_mini0_port }}"
          - --console-address
          - "{{ cs_mini0_mini0_domain }}:{{ cs_mini0_mini0_console_port }}"
          - --certs-dir
          - "/certs"

- name: Mini0 | Mini0 | Enable UFW
  become: true
  become_user: root
  community.general.ufw:
      rule: allow
      port: "{{ item }}"
      proto: tcp
      comment: "Allow Mini0 Server"
      state: enabled
  with_items:
      - "{{ cs_mini0_mini0_port }}"
      - "{{ cs_mini0_mini0_console_port }}"
