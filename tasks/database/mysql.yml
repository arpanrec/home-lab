---
- name: Database | MySQL | Install python3-mysqldb
  ansible.builtin.apt:
      name: python3-mysqldb

- name: Database | MySQL | Stop old containers
  community.docker.docker_container:
      name: "{{ item }}"
      state: absent
      force_kill: true
  with_items:
      - mysql-main

- name: Database | MySQL | Enable UFW port
  community.general.ufw:
      rule: allow
      port: "{{ item }}"
      state: enabled
  with_items:
      - "{{ cs_mysql_port }}"

- name: Database | MySQL | Create data directory
  ansible.builtin.file:
      path: "{{ cs_mysql_data_dir }}"
      state: directory
      mode: "0700"
      owner: 999
      group: 999

- name: Database | MySQL | Start Container
  community.docker.docker_container:
      name: mysql-main
      image: docker.io/library/mysql:8.0
      user: 999:999
      restart_policy: unless-stopped
      volumes:
          - "{{ cs_mysql_data_dir }}:/var/lib/mysql"
      state: started
      command: --port={{ cs_mysql_port }}
      ports:
          - "{{ cs_mysql_port }}:{{ cs_mysql_port }}"
      env:
          MYSQL_ROOT_PASSWORD: "{{ cs_mysql_password }}"
          MYSQL_USER: "{{ cs_mysql_user }}"
          MYSQL_PASSWORD: "{{ cs_mysql_password }}"
          MYSQL_DATABASE: "{{ cs_mysql_db }}"

- name: Database | MySQL | Wait for service to start
  community.mysql.mysql_info:
      login_user: "{{ cs_mysql_user }}"
      login_password: "{{ cs_mysql_password }}"
      login_host: "{{ cs_mysql_host }}"
      login_port: "{{ cs_mysql_port }}"
  register: cs_mysql_info

- ansible.builtin.debug:
      var: cs_mysql_info
