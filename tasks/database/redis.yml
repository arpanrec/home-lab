---
- name: Database | Redis | Create data directory
  ansible.builtin.file:
      path: "{{ item }}"
      state: directory
      mode: "0755"
  with_items:
      - "{{ cs_redis_data_dir }}"
      - "{{ cs_redis_dir }}"
      - "{{ cs_redis_certs_dir }}"
      - "{{ cs_redis_certs_privkey_file | dirname }}"
      - "{{ cs_redis_certs_cert_file | dirname }}"
      - "{{ cs_redis_certs_chain_file | dirname }}"
      - "{{ cs_redis_certs_csr_file | dirname }}"
      - "{{ cs_redis_client_certs_dir }}"
      - "{{ cs_redis_client_certs_key_file | dirname }}"
      - "{{ cs_redis_client_certs_csr_file | dirname }}"
      - "{{ cs_redis_client_certs_cert_file | dirname }}"
      - "{{ cs_redis_client_certs_ca_file | dirname }}"

- name: Database | Redis | Stop old container
  community.docker.docker_container:
      name: "{{ redis_container_name }}"
      state: absent
      force_kill: true

- name: Database | Redis | Create SSL Private key
  community.crypto.openssl_privatekey:
      path: "{{ cs_redis_certs_privkey_file }}"
      size: 4096
      mode: "0644"
      cipher: auto
      passphrase: "{{ cs_redis_tls_privkey_pass }}"

- name: Database | Redis | Create SSL CSR
  community.crypto.openssl_csr:
      path: "{{ cs_redis_certs_csr_file }}"
      privatekey_path: "{{ cs_redis_certs_privkey_file }}"
      privatekey_passphrase: "{{ cs_redis_tls_privkey_pass }}"
      common_name: "{{ cs_redis_private_ip }}"
      version: 1
      subject_alt_name:
          - "IP:{{ cs_redis_private_ip }}"
          - "IP:127.0.0.1"
          - "DNS:localhost"
      key_usage:
          - "digitalSignature"
          - "keyEncipherment"
          - "keyAgreement"
      extended_key_usage:
          - "serverAuth"
          - "clientAuth"
      create_subject_key_identifier: true
      mode: "0644"

- name: Database | Redis | Sign SSL CSR
  community.crypto.x509_certificate:
      path: "{{ cs_redis_certs_cert_file }}"
      csr_path: "{{ cs_redis_certs_csr_file }}"
      provider: ownca
      ownca_privatekey_content: "{{ cs_root_ca_privkey_pem }}"
      ownca_privatekey_passphrase: "{{ cs_root_ca_privkey_pass }}"
      ownca_content: "{{ cs_root_ca_cert_pem }}"
      mode: "0644"
      return_content: true

- name: Database | Redis | Write CA certificate
  ansible.builtin.copy:
      content: "{{ cs_root_ca_cert_pem }}"
      dest: "{{ cs_redis_certs_chain_file }}"
      mode: "0644"
      remote_src: false

- name: Database | Redis | Start container
  community.docker.docker_container:
      name: "{{ redis_container_name }}"
      image: "{{ redis_docker_image }}:{{ redis_docker_image_tag }}"
      state: started
      restart_policy: unless-stopped
      volumes:
          - "{{ cs_redis_data_dir }}:/data"
          - "{{ cs_redis_certs_privkey_file }}:/server.key"
          - "{{ cs_redis_certs_cert_file }}:/server.crt"
          - "{{ cs_redis_certs_chain_file }}:/ca.crt"
      ports:
          - "{{ cs_redis_tls_port }}:{{ cs_redis_tls_port }}"
      command: redis-server --save 20 1 --loglevel warning
          --requirepass "{{ cs_redis_password }}" --port 0
          --tls-port "{{ cs_redis_tls_port }}" --tls-cert-file /server.crt --tls-auth-clients yes
          --tls-key-file /server.key --tls-ca-cert-file /ca.crt
          --tls-key-file-pass {{ cs_redis_tls_privkey_pass }}

- name: Database | Redis | Enable UFW port
  community.general.ufw:
      rule: allow
      port: "{{ cs_redis_tls_port }}"
      state: enabled

- name: Database | Redis | Test | Install Redis Tools
  ansible.builtin.apt:
      name: redis-tools
      state: present
      install_recommends: true

- name: Database | Redis | Test | Create client key
  community.crypto.openssl_privatekey:
      path: "{{ cs_redis_client_certs_key_file }}"
      size: 4096
      mode: "0600"

- name: Database | Redis | Test | Create client CSR
  community.crypto.openssl_csr:
      path: "{{ cs_redis_client_certs_csr_file }}"
      privatekey_path: "{{ cs_redis_client_certs_key_file }}"

- name: Database | Redis | Test | Sign client CSR
  community.crypto.x509_certificate:
      path: "{{ cs_redis_client_certs_cert_file }}"
      csr_path: "{{ cs_redis_client_certs_csr_file }}"
      provider: ownca
      ownca_content: "{{ cs_root_ca_cert_pem }}"
      ownca_privatekey_content: "{{ cs_root_ca_privkey_pem }}"
      ownca_privatekey_passphrase: "{{ cs_root_ca_privkey_pass }}"

- name: Database | Redis | Test | Write client CA certificate
  ansible.builtin.copy:
      content: "{{ cs_root_ca_cert_pem }}"
      dest: "{{ cs_redis_client_certs_ca_file }}"
      mode: "0644"
      remote_src: false

- name: Database | Redis | Wait for service to start
  ansible.builtin.command:
      cmd: "redis-cli -a {{ cs_redis_password }} -p {{ cs_redis_tls_port }} --no-auth-warning
          --tls --cert {{ cs_redis_client_certs_cert_file }}
          --key {{ cs_redis_client_certs_key_file }}
          --cacert {{ cs_redis_client_certs_ca_file }} ping"
  changed_when: false
  timeout: 3
  register: redis_ping
  retries: 30
  delay: 5
  until: redis_ping.stdout is defined and redis_ping.stdout == "PONG"
