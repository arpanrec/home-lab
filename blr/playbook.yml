---
- name: Access Key
  hosts: localhost
  become: false
  gather_facts: false
  no_log: "{{ cs_no_log }}"
  tags: always
  tasks:
      - name: Access Key | Write SSH Private Key
        ansible.builtin.copy:
            content: "{{ lookup('ansible.builtin.file', cs_vm_ssh_priv_id_ecdsa_file, lstrip=false, rstrip=false)
                | get_unencrypted_id_ecdsa(password=cs_vm_ssh_priv_id_ecdsa_password) }}"
            mode: "0600"
            dest: "{{ cs_vm_ssh_local_key_file }}"

- name: Patch Cloud System
  hosts: patchservers
  become: true
  become_user: root
  gather_facts: true
  no_log: "{{ cs_no_log }}"
  tags: never,patch
  tasks:
      - name: Patch Cloud System
        ansible.builtin.import_tasks:
            file: tasks/patch.yml

- name: NFS Server
  hosts: rb4-m3
  become: false
  gather_facts: false
  no_log: "{{ cs_no_log }}"
  tasks:
      - name: NFS Server | Mount Disk
        become: true
        become_user: root
        tags: never,nfs-server
        ansible.builtin.import_tasks:
            file: tasks/nfs-server.yml

- name: NFS Client
  hosts: rb4-m1:rb4-m2
  become: false
  gather_facts: false
  no_log: "{{ cs_no_log }}"
  tasks:
      - name: NFS Client | Install NFS client
        become: true
        become_user: root
        tags: never,nfs-client
        ansible.builtin.import_tasks:
            file: tasks/nfs-client.yml

- name: Database
  hosts: rb4-m1
  become: false
  gather_facts: false
  no_log: "{{ cs_no_log }}"
  tasks:
      - name: Database | Postgres
        become: true
        become_user: root
        tags: never,database,postgres
        ansible.builtin.import_tasks:
            file: tasks/database/postgres.yml

      - name: Database | Redis
        become: true
        become_user: root
        tags: never,database,redis
        ansible.builtin.import_tasks:
            file: tasks/database/redis.yml

      - name: Database | Elasticsearch
        become: true
        become_user: root
        tags: never,database,elasticsearch
        ansible.builtin.import_tasks:
            file: tasks/database/elasticsearch.yml

- name: Mini0
  hosts: rb4-m2
  become: false
  gather_facts: false
  no_log: "{{ cs_no_log }}"
  tasks:
      - name: Mini0
        tags: never,mini0
        become: true
        become_user: root
        ansible.builtin.import_tasks:
            file: tasks/mini0/main.yml

- name: OnlyOffice
  hosts: rb4-m2
  become: false
  gather_facts: false
  no_log: "{{ cs_no_log }}"
  tasks:
      - name: OnlyOffice
        tags: never,onlyoffice
        become: true
        become_user: root
        ansible.builtin.import_tasks:
            file: tasks/onlyoffice.yml

- name: Collabora
  hosts: rb4-m2
  become: false
  gather_facts: false
  no_log: "{{ cs_no_log }}"
  tasks:
      - name: Collabora
        tags: never,collabora
        become: true
        become_user: root
        ansible.builtin.import_tasks:
            file: tasks/collabora.yml

- name: Nextcloud
  hosts: rb4-m3
  become: false
  gather_facts: false
  no_log: "{{ cs_no_log }}"
  tasks:
      - name: Nextcloud | Test cs_nc_protocol
        tags: always
        ansible.builtin.assert:
            that:
                - "cs_nc_protocol in ['http', 'https']"
            fail_msg: "cs_nc_protocol must be either 'http' or 'https'"
            success_msg: "cs_nc_protocol is valid"

      - name: Nextcloud | Prepare
        tags: never,nextcloud,nextcloud_prepare
        become: true
        become_user: root
        ansible.builtin.import_tasks:
            file: tasks/nextcloud/prepare.yml

      - name: Nextcloud | Install
        become: true
        become_user: root
        tags: never,nextcloud,nextcloud_install
        ansible.builtin.import_tasks:
            file: tasks/nextcloud/install.yml

      - name: Nextcloud | Admin
        become: true
        become_user: root
        tags: never,nextcloud,nextcloud_admin
        ansible.builtin.import_tasks:
            file: tasks/nextcloud/admin.yml

      - name: Nextcloud | Cache
        become: true
        become_user: root
        tags: never,nextcloud,nextcloud_cache
        ansible.builtin.import_tasks:
            file: tasks/nextcloud/cache.yml

      - name: Nextcloud | Mount Disk
        become: true
        become_user: root
        tags: never,nextcloud,nextcloud_mount
        ansible.builtin.import_tasks:
            file: tasks/nextcloud/mount.yml

      - name: Nextcloud | Imaginary
        become: true
        become_user: root
        tags: never,nextcloud,nextcloud_imaginary
        ansible.builtin.import_tasks:
            file: tasks/nextcloud/imaginary.yml

      - name: Nextcloud | Full Text Search
        become: true
        become_user: root
        tags: never,nextcloud,nextcloud_fulltextsearch
        ansible.builtin.import_tasks:
            file: tasks/nextcloud/fulltextsearch.yml

      - name: Nextcloud | Hub Bundle
        become: true
        become_user: root
        tags: never,nextcloud,nextcloud_hub_bundle
        ansible.builtin.import_tasks:
            file: tasks/nextcloud/hub_bundle.yml

      - name: Nextcloud | Users
        become: true
        become_user: root
        tags: never,nextcloud,nextcloud_users
        ansible.builtin.import_tasks:
            file: tasks/nextcloud/users/main.yml

      - name: Nextcloud | Post Install
        become: true
        become_user: root
        tags: never,nextcloud,nextcloud_post_install
        ansible.builtin.import_tasks:
            file: tasks/nextcloud/post-install.yml

      - name: Nextcloud | Dump
        become: true
        become_user: root
        tags: never,nextcloud,nextcloud_dump
        ansible.builtin.import_tasks:
            file: tasks/nextcloud/dump.yml

- name: Delete all
  hosts: patchservers
  become: false
  gather_facts: false
  no_log: "{{ cs_no_log }}"
  tags: never,delete_all
  tasks:
      - name: Delete all
        become: true
        become_user: root
        ansible.builtin.shell:
            cmd: |+
                docker rm -f {{ cs_postgres_container_name }} \
                  {{ ps_postgres_pg_admin_docker_container_name }} \
                  {{ redis_container_name }} {{ cs_elasticsearch_docker_container_name }} \
                  {{ cs_nc_imaginary_docker_container_name }} {{ cs_collabora_container_name }}

                apt-get clean
                apt-get autoremove -y

                systemctl disable --now {{ cs_nc_cron_system_timer_name }}.timer || true
                systemctl disable --now {{ cs_nc_cron_system_timer_name }}.service || true
                systemctl disable --now {{ cs_nc_fts_elasticsearch_systemd }}.service || true
                systemctl disable --now {{ cs_nc_files_scanner_systemd_timer_name }}.timer || true
                systemctl disable --now {{ cs_nc_files_scanner_systemd_timer_name }}.service || true
                systemctl disable --now nextcloud-data-dump.timer || true
                systemctl disable --now nextcloud-data-dump.service || true

                rm -rf /etc/systemd/system/nextcloud*

                rm -rf {{ cs_nc_root_dir }}
                rm -rf {{ cs_postgres_dir }}
                rm -rf {{ cs_redis_dir }}
                rm -rf {{ cs_elasticsearch_dir }}
                rm -rf {{ cs_collabora_dir }}

            executable: /bin/bash
        changed_when: true
        register: delete_all

      - name: Delete all | Debug
        ansible.builtin.debug:
            var: delete_all
